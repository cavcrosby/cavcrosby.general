---
lxd_release_version: 4.0.8

# the user group that is able to talk to LXD
lxd_access_group: sudo

# LXD's tarball contents are usually under a new directory, hence a new directory
# with LXD's tarball contents will be created.
lxd_extracted_tarball_parent_path: /usr/local/src

# the password used to allow a remote host to interact with LXD over TCP/IP
lxd_trust_password: Passw0rd!

# variables related to LXD's Go installation
lxd_source_go_version: 1.17.5
lxd_source_go_arch: amd64
lxd_source_go_extracted_tarball_parent_path: /usr/local/src
lxd_source_go_sha256_checksum: bd78114b0d441b029c8fe0341f4910370925a4d270a6a590668840675b0c653e
lxd_source_go_env_vars_file_path: /root/.bashrc

# Setting this variable (to something other than an empty string) assumes the
# source code for LXD will be located at the value set by this variable.
# Additionally, setting this variable will overwrite the need for Ansible to grab
# a tarball and instead will build LXD based on the source code designated by the
# variable. If set, LXD will be built each time this role is invoked.
lxd_src_path: ""

# These are tool flags for when building LXD. If a custom source path is used to
# build LXD over a release tarball, then these values will need to be set
# different from the default. While its possible to combine all possible
# dependency paths together, I feels its best that the number of directories for
# dependencies be limited or else conflicts could occur.
lxd_cgo_cflags: >
  -I{{ lxd_extracted_tarball_parent_path }}/lxd-{{ lxd_release_version }}/vendor/raft/include/
  -I{{ lxd_extracted_tarball_parent_path }}/lxd-{{ lxd_release_version }}/vendor/dqlite/include/
lxd_cgo_ldflags: >
  -L{{ lxd_extracted_tarball_parent_path }}/lxd-{{ lxd_release_version }}/vendor/raft/.libs/
  -L{{ lxd_extracted_tarball_parent_path }}/lxd-{{ lxd_release_version }}/vendor/dqlite/.libs/
lxd_cgo_ldflags_allow: (-Wl,-wrap,pthread_create)|(-Wl,-z,now)
lxd_ld_library_path: "{{ lxd_extracted_tarball_parent_path }}/lxd-{{ lxd_release_version }}/vendor/raft/.libs/:{{ lxd_extracted_tarball_parent_path }}/lxd-{{ lxd_release_version }}/vendor/dqlite/.libs/"  # noqa line-length
# bridge interface used by LXD to communicate with LXD containers
lxd_bridge_device_name: lxdbr0

# The LXD binary should not be own by a non-root user (or group). Hence, the
# preference is that the LXD GOPATH be somewhere that's considered global.
lxd_source_go_path: /usr/local/share/go

# The intention behind the wrapper is to have a place to set LD_LIBRARY_PATH
# before calling lxd. As this env var will be wiped by sudo, even if appended to
# env_keep in the sudoers file. If the wrapper path is to change, ensure the new
# wrapper path is before the GOPATH/bin dir on the PATH.
lxd_wrapper_path: /usr/local/bin/lxd

# used to automate the initialization of LXD
lxd_preseed: |
  config:
    core.https_address: {{ ansible_default_ipv4.address }}
    core.trust_password: true
  networks:
  - config:
      ipv4.address: 10.122.62.1/24
      ipv4.nat: "true"
      ipv6.address: fd00::1/64
      ipv6.nat: "true"
    description: ""
    name: {{ lxd_bridge_device_name }}
    type: bridge
  storage_pools:
  - config:
      source: /var/lib/lxd/storage-pools/default
    description: ""
    name: default
    driver: dir
  profiles:
  - config: {}
    description: Default LXD profile
    devices:
      eth0:
        name: eth0
        network: {{ lxd_bridge_device_name }}
        type: nic
      root:
        path: /
        pool: default
        type: disk
    name: default

# the default bridge created when installing 'a' lxc package
_default_lxc_bridge: lxcbr0

# The directory created from a extracted lxd release tarball, which "should" also
# serve as the prefix in said tarball name.
_lxd_extracted_dir: lxd-{{ lxd_release_version }}

_lxd_data_dir: /tmp/ansible_roles/lxd_source
_lxd_remote_preseed_path: "{{ _lxd_data_dir }}/lxd.yaml"
_running_lxd_remote_preseed_path: "{{ _lxd_data_dir }}/running_lxd.yaml"
